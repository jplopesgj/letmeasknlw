{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\www\\\\letmeasknlw\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Home } from \"./pages/Home\";\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account.');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/rooms/new\",\n      component: NewRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/santi/www/letmeasknlw/src/App.tsx"],"names":["BrowserRouter","Route","useState","useEffect","Home","NewRoom","auth","firebase","App","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,SAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAGL,IAAI,CAACM,kBAAL,CAAwBH,IAAI,IAAI;AAClD,UAAIA,IAAJ,EAAU;AACR,cAAM;AAAEI,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCN,IAAvC;;AAEA,YAAI,CAACI,WAAD,IAAgB,CAACC,QAArB,EAA+B;AAC7B,gBAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDN,QAAAA,OAAO,CAAC;AACNO,UAAAA,EAAE,EAAEF,GADE;AAENG,UAAAA,IAAI,EAAEL,WAFA;AAGNM,UAAAA,MAAM,EAAEL;AAHF,SAAD,CAAP;AAMD;AACF,KAfmB,CAApB;AAgBA,WAAO,MAAM;AACXH,MAAAA,WAAW;AACZ,KAFD;AAGD,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,iBAAeS,gBAAf,GAAkC;AAChC,UAAMC,QAAQ,GAAG,IAAId,QAAQ,CAACD,IAAT,CAAcgB,kBAAlB,EAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMjB,IAAI,CAACkB,eAAL,CAAqBH,QAArB,CAArB;;AAGA,QAAIE,MAAM,CAACd,IAAX,EAAiB;AACf,YAAM;AAAEI,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAiCQ,MAAM,CAACd,IAA9C;;AAEA,UAAI,CAACI,WAAD,IAAgB,CAACC,QAArB,EAA+B;AAC7B,cAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDN,MAAAA,OAAO,CAAC;AACNO,QAAAA,EAAE,EAAEF,GADE;AAENG,QAAAA,IAAI,EAAEL,WAFA;AAGNM,QAAAA,MAAM,EAAEL;AAHF,OAAD,CAAP;AAKD;AACF;;AAED,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEV;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtDQG,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter, Route } from 'react-router-dom'\r\nimport { createContext, useState, useEffect } from 'react'\r\n\r\nimport { Home } from \"./pages/Home\"\r\nimport { NewRoom } from \"./pages/NewRoom\";\r\n\r\nimport { auth, firebase } from './services/firebase';\r\n\r\nimport { AuthContextProvider } from '/contexts/AuthContext'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState<User>();\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user\r\n\r\n        if (!displayName || !photoURL) {\r\n          throw new Error('Missing information from Google Account.');\r\n        }\r\n\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL\r\n        })\r\n\r\n      }\r\n    })\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, [])\r\n\r\n  async function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const result = await auth.signInWithPopup(provider)\r\n\r\n\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user\r\n\r\n      if (!displayName || !photoURL) {\r\n        throw new Error('Missing information from Google Account.');\r\n      }\r\n\r\n      setUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/rooms/new\" component={NewRoom} />\r\n    </BrowserRouter >\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}